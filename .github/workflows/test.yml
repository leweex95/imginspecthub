name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.0
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Install project
      run: poetry install --no-interaction

    - name: Run basic tests
      run: |
        poetry run python -m pytest tests/test_basic.py -v

    - name: Test CLI functionality
      run: |
        poetry run python -m imginspecthub.cli --help
        poetry run python -m imginspecthub.cli models
        poetry run python -m imginspecthub.cli info

    - name: Run linting
      run: |
        poetry run python -m pip install black isort flake8
        poetry run black --check imginspecthub/
        poetry run isort --check-only imginspecthub/
        poetry run flake8 imginspecthub/ --max-line-length=88 --extend-ignore=E203,W503