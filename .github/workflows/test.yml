name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.0
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Create test image
      run: |
        poetry run python -c "
        from PIL import Image, ImageDraw
        import os
        
        # Create test directory
        os.makedirs('test_data', exist_ok=True)
        
        # Create a simple test image
        img = Image.new('RGB', (300, 200), color='lightblue')
        draw = ImageDraw.Draw(img)
        draw.text((50, 50), 'Test Image', fill='black')
        draw.rectangle([75, 75, 225, 125], outline='red', width=3)
        img.save('test_data/dummy_image.jpg')
        print('Created test_data/dummy_image.jpg')
        "

    - name: Run basic tests
      run: |
        poetry run python -m pytest tests/test_basic.py -v

    - name: Test CLI functionality
      run: |
        # Test CLI help
        poetry run python -m imginspecthub.cli --help
        
        # Test models list
        poetry run python -m imginspecthub.cli models
        
        # Test system info
        poetry run python -m imginspecthub.cli info

    - name: Test CLI with dummy image (expect network error)
      continue-on-error: true
      run: |
        # This will fail due to network restrictions but tests CLI parsing
        poetry run python -m imginspecthub.cli run --model clip --image test_data/dummy_image.jpg --operation description || true

    - name: Run linting (Ubuntu only)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        poetry run python -m pip install black isort flake8
        poetry run black --check imginspecthub/
        poetry run isort --check-only imginspecthub/
        poetry run flake8 imginspecthub/ --max-line-length=88 --extend-ignore=E203,W503